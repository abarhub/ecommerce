
spring.application.name: order

server:
  port: 0
  contextPath: /
  shutdown: graceful

spring.profiles.active: h2
#spring.profiles.active: mysql

eureka:
    client:
        serviceUrl:
            defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
#    instance:
#    preferIpAddress: true
    instance:
        instance-id: ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${random.value}}

# create and drop tables and sequences, loads import.sql
#spring.jpa.hibernate.ddl-auto: create-drop
#spring.jpa.hibernate.ddl-auto: none
spring.jpa.generate-ddl: false
spring.jpa.hibernate.ddl-auto: none

#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#spring.datasource.username=system
#spring.datasource.password=password
#spring.datasource.driver-class-oracle.jdbc.driver.OracleDriver


spring.liquibase.change-log: classpath:/db/changelog/db.changelog-master.xml

#endpoints.actuator.path: /admin
#management.context-path: /actuator
management.security.enabled: false

endpoints.sensitive: false

spring:
  application:
    name: order
  cloud:
    config:
      env: default # optional
      label: master # optional
      fail-fast: true
    #uri: http://localhost:8888 # optional
    #uri: http://localhost:9090/configurator

spring.config.import: ${CONFIG_URI:configserver:http://localhost:8888}

management:
  endpoint:
    health:
      probes:
        enabled: true
      show-details: ALWAYS
    info:
      enabled: true
    startup:
      enabled: true
    metrics:
      enabled: true
    mappings:
      enabled: true
    configprops:
      enabled: true
      show-values: ALWAYS
    conditions:
      enabled: true
    beans:
      enabled: true
    httpexchanges:
      enabled: true
    liquibase:
      enabled: true
    env:
      enabled: true
      show-values: ALWAYS
  endpoints:
    web:
      exposure:
        include: 'info,health,startup,metrics,mappings,configprops,conditions,beans,httpexchanges,liquibase,env'
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      connect-timeout: 30s
      read-timeout: 30s
      endpoint: ${ZIPKIN_URI:http://localhost:9411/api/v2/spans}

logging.pattern.level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

